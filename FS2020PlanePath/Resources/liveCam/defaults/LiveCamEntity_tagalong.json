{
  "Lens": [
    {
      "Name": "",
      "Template": "<?xml version='1.0' encoding='UTF-8'?>\r\n<kml xmlns='http://www.opengis.net/kml/2.2'>\r\n  <NetworkLink>\r\n    <name>MSFS2020-PilotPathRecorder LiveCam '{alias}'</name>\r\n    <visibility>1</visibility>\r\n    <open>1</open>\r\n    <flyToView>1</flyToView>\r\n    <Link>\r\n      <href>{aliasUrl}/camera</href>\r\n    </Link>\r\n  </NetworkLink>\r\n</kml>"
    },
    {
      "Name": "camera",
      "Template": "<?xml version='1.0' encoding='UTF-8'?>\r\n<kml\r\n    xmlns='http://www.opengis.net/kml/2.2'\r\n    xmlns:gx=\"http://www.google.com/kml/ext/2.2\"\r\n>\r\n  <Document>\r\n    <name>{alias}/{lens}</name>\r\n    <open>1</open>\r\n\r\n    <Style id=\"airplane\">\r\n      <IconStyle>\r\n        <Icon>\r\n          <href>http://maps.google.com/mapfiles/kml/shapes/airports.png</href>\r\n        </Icon>\r\n        <hotSpot y=\"0\" x=\"0.5\" xunits=\"fraction\" yunits=\"fraction\"/>\r\n      </IconStyle>\r\n      <LabelStyle>\r\n        <scale>0</scale>\r\n      </LabelStyle>\r\n      <LineStyle>\r\n        <color>cc00ffff</color>\r\n        <width>3</width>\r\n      </LineStyle>\r\n    </Style>\r\n\r\n    <NetworkLink>\r\n      <name>Network Link: '{lens}'</name>\r\n      <visibility>1</visibility>\r\n      <open>1</open>\r\n      <flyToView>1</flyToView>\r\n      <Link>\r\n        <href>{aliasUrl}/update</href>\r\n        <refreshMode>onInterval</refreshMode>\r\n        <refreshInterval>{refreshSeconds}</refreshInterval>\r\n        <viewRefreshMode>onStop</viewRefreshMode>\r\n        <viewRefreshTime>0</viewRefreshTime>\r\n        <httpQuery>flightId={flightId}&amp;seq={seq}</httpQuery>\r\n        <viewFormat />\r\n      </Link>\r\n    </NetworkLink>\r\n\r\n    <Placemark>\r\n      <name>LiveCam Model</name>\r\n      <description>\r\n        <![CDATA[\r\n           <div>\r\n             <object>\r\n               <embed \r\n                 src=\"{listenerUrl}/eval/Model.values\" \r\n                 type=\"application/json\"\r\n              >\r\n            </object>\r\n          </div>\r\n        ]]>\r\n      </description>\r\n\r\n      <styleUrl>#airplane</styleUrl>\r\n      <gx:MultiTrack id=\"multitrack\">\r\n        <altitudeMode>absolute</altitudeMode>\r\n        <gx:interpolate>1</gx:interpolate>\r\n      </gx:MultiTrack>\r\n    </Placemark>\r\n\r\n    <LookAt>\r\n      <longitude>{longitude}</longitude>\r\n      <latitude>{latitude}</latitude>\r\n      <altitude>{altitude}</altitude>\r\n      <heading>{heading}</heading>\r\n      <tilt>{tilt}</tilt>\r\n      <range>2500</range>\r\n      <altitudeMode>absolute</altitudeMode>\r\n      <gx:altitudeMode>absolute</gx:altitudeMode>\r\n    </LookAt>\r\n\r\n  </Document>\r\n</kml>"
    },
    {
      "Name": "update",
      "Template": "@{\r\n\r\n    @using System;\r\n    var query = Model.query;\r\n\r\n    // validate required URL parameters \r\n    if (!query.ContainsKey(\"flightId\") || !query.ContainsKey(\"seq\")) {\r\n     Console.WriteLine(\"error: required parameter(s) not present\");\r\n     return;\r\n    }\r\n\r\n    // hack to remove duplicate parameter values\r\n    // which seem to be added by Google Earth (our fault?)\r\n    var hackLast = new Func<string, string>(\r\n        s => {\r\n          var k = s.Split(',');\r\n          return k[k.Length - 1];\r\n        }\r\n    );\r\n\r\n    var flightIdLast = hackLast.Invoke(query[\"flightId\"]);\r\n    var seqLast = hackLast.Invoke(query[\"seq\"]);\r\n\r\n     // console output for debugging\r\n    //Console.WriteLine($\"flightIdLast({flightIdLast})\");\r\n    //Console.WriteLine($\"seqLast({seqLast})\");\r\n\r\n    var lastSeq = long.Parse(seqLast);\r\n    var flightId = int.Parse(flightIdLast);\r\n\r\n    // fetch the \"multitrack\" updates from FS2020PlanePath's log\r\n    var updates = Model.getMultitrackUpdates(flightId, lastSeq);\r\n\r\n    var nextSeq = (\r\n        updates.Length == 0\r\n      ? lastSeq\r\n      : updates[updates.Length - 1].seq\r\n    );\r\n\r\n    //Console.WriteLine($\"nextSeq({nextSeq})\");\r\n\r\n}\r\n<?xml version='1.0' encoding='UTF-8'?>\r\n<kml\r\n  xmlns='http://www.opengis.net/kml/2.2'\r\n  xmlns:gx='http://www.google.com/kml/ext/2.2'\r\n>\r\n  <NetworkLinkControl>\r\n    <cookie>seq=@nextSeq&amp;flightId=@flightId</cookie>\r\n    <linkName>Lens: @Model.lens</linkName>\r\n    <Update>\r\n      <targetHref>@Model.aliasUrl/camera</targetHref>\r\n      <Create>\r\n        <gx:MultiTrack targetId='multitrack'>\r\n          <gx:Track id=\"@Model.seq\">\r\n            <altitudeMode>absolute</altitudeMode>\r\n            @foreach (var update in updates) {\r\n            <gx:coord>\r\n              @update.longitude\r\n              @update.latitude\r\n              @update.altitude\r\n            </gx:coord>\r\n            }\r\n            @foreach (var update in updates) {\r\n            <gx:angles>\r\n              @update.heading\r\n              @update.tilt\r\n              @update.roll\r\n            </gx:angles>\r\n            }\r\n     <!-- \r\n\r\n                Un-comment the \"Model\" tag below to show the 3D Cessna Model next to the Placemark.\r\n                Use the \"Scale\" values to make the model aircraft appear \"larger than life\" (1.0 = to scale).\r\n\r\n                NOTE: it's been observed to crash Google Earth in certain configurations.\r\n                Hint: Use the \"repair\" tool and/or use a different / \"safe\" Graphics Mode. \r\n\r\n     -->\r\n     <!-- \r\n            <Model>\r\n              <Link>\r\n                <href>@Model.listenerUrl/liveCam/models/cessna.dae</href>\r\n              </Link>\r\n              <Orientation>\r\n                <heading>180</heading>\r\n              </Orientation>\r\n              <Scale> \r\n                <x>15.0</x> \r\n                <y>15.0</y> \r\n                <z>15.0</z> \r\n               </Scale> \r\n            </Model>\r\n       -->\r\n          </gx:Track>\r\n        </gx:MultiTrack>\r\n      </Create>\r\n    </Update>\r\n  </NetworkLinkControl>\r\n</kml>"
    }
  ]
}